Terminals unused in grammar

   ENDFILE
   ERROR
   '-'
   '+'


State 105 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 $@1: /* empty */

    7 var_declaration: type_specifier ID $@1 var_declaration_

    8 var_declaration_: SEMI

    9 $@2: /* empty */

   10 var_declaration_: LBRACK NUM $@2 RBRACK SEMI

   11 type_specifier: INT
   12               | VOID

   13 $@3: /* empty */

   14 fun_declaration: type_specifier ID $@3 LPAREN params RPAREN compound_stmt

   15 params: param_list
   16       | VOID

   17 param_list: param_list COMMA param
   18           | param

   19 param: type_specifier ID param_

   20 param_: /* empty */
   21       | LBRACK RBRACK

   22 compound_stmt: LBRACE local_declarations statement_list RBRACE

   23 local_declarations: local_declarations var_declaration
   24                   | /* empty */

   25 statement_list: statement_list statement
   26               | /* empty */

   27 statement: expression_stmt
   28          | compound_stmt
   29          | selection_stmt
   30          | iteration_stmt
   31          | return_stmt

   32 expression_stmt: expression SEMI
   33                | SEMI

   34 selection_stmt: IF LPAREN expression RPAREN statement
   35               | IF LPAREN expression RPAREN statement ELSE statement

   36 iteration_stmt: WHILE LPAREN expression RPAREN statement

   37 return_stmt: RETURN SEMI
   38            | RETURN expression SEMI

   39 expression: var ASSIGN expression
   40           | simple_expression

   41 var: ID

   42 $@4: /* empty */

   43 var: ID $@4 LBRACK expression RBRACK

   44 simple_expression: additive_expression LTE additive_expression
   45                  | additive_expression LT additive_expression
   46                  | additive_expression GT additive_expression
   47                  | additive_expression GTE additive_expression
   48                  | additive_expression EQ additive_expression
   49                  | additive_expression NEQ additive_expression
   50                  | additive_expression

   51 additive_expression: additive_expression PLUS term
   52                    | additive_expression MINUS term
   53                    | term

   54 term: term TIMES factor
   55     | term OVER factor
   56     | factor

   57 factor: LPAREN expression RPAREN
   58       | var
   59       | call
   60       | NUM

   61 $@5: /* empty */

   62 call: ID $@5 LPAREN args RPAREN

   63 args: arg_list
   64     | /* empty */

   65 arg_list: arg_list COMMA expression
   66         | expression


Terminals, with rules where they appear

$end (0) 0
'+' (43)
'-' (45)
error (256)
IF (258) 34 35
ELSE (259) 35
WHILE (260) 36
ID (261) 7 14 19 41 43 62
NUM (262) 10 60
ASSIGN (263) 39
EQ (264) 48
NEQ (265) 49
LT (266) 45
LTE (267) 44
GT (268) 46
GTE (269) 47
PLUS (270) 51
MINUS (271) 52
TIMES (272) 54
OVER (273) 55
LPAREN (274) 14 34 35 36 57 62
RPAREN (275) 14 34 35 36 57 62
LBRACK (276) 10 21 43
RBRACK (277) 10 21 43
LBRACE (278) 22
RBRACE (279) 22
SEMI (280) 8 10 32 33 37 38
COMMA (281) 17 65
ENDFILE (282)
ERROR (283)
INT (284) 11
RETURN (285) 37 38
VOID (286) 12 16


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
declaration_list (36)
    on left: 2 3, on right: 1 2
declaration (37)
    on left: 4 5, on right: 2 3
var_declaration (38)
    on left: 7, on right: 4 23
$@1 (39)
    on left: 6, on right: 7
var_declaration_ (40)
    on left: 8 10, on right: 7
$@2 (41)
    on left: 9, on right: 10
type_specifier (42)
    on left: 11 12, on right: 7 14 19
fun_declaration (43)
    on left: 14, on right: 5
$@3 (44)
    on left: 13, on right: 14
params (45)
    on left: 15 16, on right: 14
param_list (46)
    on left: 17 18, on right: 15 17
param (47)
    on left: 19, on right: 17 18
param_ (48)
    on left: 20 21, on right: 19
compound_stmt (49)
    on left: 22, on right: 14 28
local_declarations (50)
    on left: 23 24, on right: 22 23
statement_list (51)
    on left: 25 26, on right: 22 25
statement (52)
    on left: 27 28 29 30 31, on right: 25 34 35 36
expression_stmt (53)
    on left: 32 33, on right: 27
selection_stmt (54)
    on left: 34 35, on right: 29
iteration_stmt (55)
    on left: 36, on right: 30
return_stmt (56)
    on left: 37 38, on right: 31
expression (57)
    on left: 39 40, on right: 32 34 35 36 38 39 43 57 65 66
var (58)
    on left: 41 43, on right: 39 58
$@4 (59)
    on left: 42, on right: 43
simple_expression (60)
    on left: 44 45 46 47 48 49 50, on right: 40
additive_expression (61)
    on left: 51 52 53, on right: 44 45 46 47 48 49 50 51 52
term (62)
    on left: 54 55 56, on right: 51 52 53 54 55
factor (63)
    on left: 57 58 59 60, on right: 54 55 56
call (64)
    on left: 62, on right: 59
$@5 (65)
    on left: 61, on right: 62
args (66)
    on left: 63 64, on right: 62
arg_list (67)
    on left: 65 66, on right: 63 65


state 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


state 1

   11 type_specifier: INT .

    $default  reduce using rule 11 (type_specifier)


state 2

   12 type_specifier: VOID .

    $default  reduce using rule 12 (type_specifier)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 9


state 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


state 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


state 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


state 7

    7 var_declaration: type_specifier . ID $@1 var_declaration_
   14 fun_declaration: type_specifier . ID $@3 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11


state 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


state 9

    0 $accept: program $end .

    $default  accept


state 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


state 11

    7 var_declaration: type_specifier ID . $@1 var_declaration_
   14 fun_declaration: type_specifier ID . $@3 LPAREN params RPAREN compound_stmt

    LPAREN    reduce using rule 13 ($@3)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 12
    $@3  go to state 13


state 12

    7 var_declaration: type_specifier ID $@1 . var_declaration_

    LBRACK  shift, and go to state 14
    SEMI    shift, and go to state 15

    var_declaration_  go to state 16


state 13

   14 fun_declaration: type_specifier ID $@3 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 17


state 14

   10 var_declaration_: LBRACK . NUM $@2 RBRACK SEMI

    NUM  shift, and go to state 18


state 15

    8 var_declaration_: SEMI .

    $default  reduce using rule 8 (var_declaration_)


state 16

    7 var_declaration: type_specifier ID $@1 var_declaration_ .

    $default  reduce using rule 7 (var_declaration)


state 17

   14 fun_declaration: type_specifier ID $@3 LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 19

    type_specifier  go to state 20
    params          go to state 21
    param_list      go to state 22
    param           go to state 23


state 18

   10 var_declaration_: LBRACK NUM . $@2 RBRACK SEMI

    $default  reduce using rule 9 ($@2)

    $@2  go to state 24


state 19

   12 type_specifier: VOID .
   16 params: VOID .

    RPAREN    reduce using rule 16 (params)
    $default  reduce using rule 12 (type_specifier)


state 20

   19 param: type_specifier . ID param_

    ID  shift, and go to state 25


state 21

   14 fun_declaration: type_specifier ID $@3 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 26


state 22

   15 params: param_list .
   17 param_list: param_list . COMMA param

    COMMA  shift, and go to state 27

    $default  reduce using rule 15 (params)


state 23

   18 param_list: param .

    $default  reduce using rule 18 (param_list)


state 24

   10 var_declaration_: LBRACK NUM $@2 . RBRACK SEMI

    RBRACK  shift, and go to state 28


state 25

   19 param: type_specifier ID . param_

    LBRACK  shift, and go to state 29

    $default  reduce using rule 20 (param_)

    param_  go to state 30


state 26

   14 fun_declaration: type_specifier ID $@3 LPAREN params RPAREN . compound_stmt

    LBRACE  shift, and go to state 31

    compound_stmt  go to state 32


state 27

   17 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 20
    param           go to state 33


state 28

   10 var_declaration_: LBRACK NUM $@2 RBRACK . SEMI

    SEMI  shift, and go to state 34


state 29

   21 param_: LBRACK . RBRACK

    RBRACK  shift, and go to state 35


state 30

   19 param: type_specifier ID param_ .

    $default  reduce using rule 19 (param)


state 31

   22 compound_stmt: LBRACE . local_declarations statement_list RBRACE

    $default  reduce using rule 24 (local_declarations)

    local_declarations  go to state 36


state 32

   14 fun_declaration: type_specifier ID $@3 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 14 (fun_declaration)


state 33

   17 param_list: param_list COMMA param .

    $default  reduce using rule 17 (param_list)


state 34

   10 var_declaration_: LBRACK NUM $@2 RBRACK SEMI .

    $default  reduce using rule 10 (var_declaration_)


state 35

   21 param_: LBRACK RBRACK .

    $default  reduce using rule 21 (param_)


state 36

   22 compound_stmt: LBRACE local_declarations . statement_list RBRACE
   23 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 26 (statement_list)

    var_declaration  go to state 37
    type_specifier   go to state 38
    statement_list   go to state 39


state 37

   23 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 23 (local_declarations)


state 38

    7 var_declaration: type_specifier . ID $@1 var_declaration_

    ID  shift, and go to state 40


state 39

   22 compound_stmt: LBRACE local_declarations statement_list . RBRACE
   25 statement_list: statement_list . statement

    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45
    LBRACE  shift, and go to state 31
    RBRACE  shift, and go to state 46
    SEMI    shift, and go to state 47
    RETURN  shift, and go to state 48

    compound_stmt        go to state 49
    statement            go to state 50
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 40

    7 var_declaration: type_specifier ID . $@1 var_declaration_

    $default  reduce using rule 6 ($@1)

    $@1  go to state 12


state 41

   34 selection_stmt: IF . LPAREN expression RPAREN statement
   35               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 62


state 42

   36 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 63


state 43

   41 var: ID .
   43    | ID . $@4 LBRACK expression RBRACK
   62 call: ID . $@5 LPAREN args RPAREN

    LPAREN    reduce using rule 61 ($@5)
    LBRACK    reduce using rule 42 ($@4)
    $default  reduce using rule 41 (var)

    $@4  go to state 64
    $@5  go to state 65


state 44

   60 factor: NUM .

    $default  reduce using rule 60 (factor)


state 45

   57 factor: LPAREN . expression RPAREN

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 66
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 46

   22 compound_stmt: LBRACE local_declarations statement_list RBRACE .

    $default  reduce using rule 22 (compound_stmt)


state 47

   33 expression_stmt: SEMI .

    $default  reduce using rule 33 (expression_stmt)


state 48

   37 return_stmt: RETURN . SEMI
   38            | RETURN . expression SEMI

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45
    SEMI    shift, and go to state 67

    expression           go to state 68
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 49

   28 statement: compound_stmt .

    $default  reduce using rule 28 (statement)


state 50

   25 statement_list: statement_list statement .

    $default  reduce using rule 25 (statement_list)


state 51

   27 statement: expression_stmt .

    $default  reduce using rule 27 (statement)


state 52

   29 statement: selection_stmt .

    $default  reduce using rule 29 (statement)


state 53

   30 statement: iteration_stmt .

    $default  reduce using rule 30 (statement)


state 54

   31 statement: return_stmt .

    $default  reduce using rule 31 (statement)


state 55

   32 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 69


state 56

   39 expression: var . ASSIGN expression
   58 factor: var .

    ASSIGN  shift, and go to state 70

    $default  reduce using rule 58 (factor)


state 57

   40 expression: simple_expression .

    $default  reduce using rule 40 (expression)


state 58

   44 simple_expression: additive_expression . LTE additive_expression
   45                  | additive_expression . LT additive_expression
   46                  | additive_expression . GT additive_expression
   47                  | additive_expression . GTE additive_expression
   48                  | additive_expression . EQ additive_expression
   49                  | additive_expression . NEQ additive_expression
   50                  | additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    EQ     shift, and go to state 71
    NEQ    shift, and go to state 72
    LT     shift, and go to state 73
    LTE    shift, and go to state 74
    GT     shift, and go to state 75
    GTE    shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 50 (simple_expression)


state 59

   53 additive_expression: term .
   54 term: term . TIMES factor
   55     | term . OVER factor

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 53 (additive_expression)


state 60

   56 term: factor .

    $default  reduce using rule 56 (term)


state 61

   59 factor: call .

    $default  reduce using rule 59 (factor)


state 62

   34 selection_stmt: IF LPAREN . expression RPAREN statement
   35               | IF LPAREN . expression RPAREN statement ELSE statement

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 81
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 63

   36 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 82
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 64

   43 var: ID $@4 . LBRACK expression RBRACK

    LBRACK  shift, and go to state 83


state 65

   62 call: ID $@5 . LPAREN args RPAREN

    LPAREN  shift, and go to state 84


state 66

   57 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 85


state 67

   37 return_stmt: RETURN SEMI .

    $default  reduce using rule 37 (return_stmt)


state 68

   38 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 86


state 69

   32 expression_stmt: expression SEMI .

    $default  reduce using rule 32 (expression_stmt)


state 70

   39 expression: var ASSIGN . expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 87
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 71

   48 simple_expression: additive_expression EQ . additive_expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var                  go to state 88
    additive_expression  go to state 89
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 72

   49 simple_expression: additive_expression NEQ . additive_expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var                  go to state 88
    additive_expression  go to state 90
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 73

   45 simple_expression: additive_expression LT . additive_expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var                  go to state 88
    additive_expression  go to state 91
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 74

   44 simple_expression: additive_expression LTE . additive_expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var                  go to state 88
    additive_expression  go to state 92
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 75

   46 simple_expression: additive_expression GT . additive_expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var                  go to state 88
    additive_expression  go to state 93
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 76

   47 simple_expression: additive_expression GTE . additive_expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var                  go to state 88
    additive_expression  go to state 94
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 77

   51 additive_expression: additive_expression PLUS . term

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var     go to state 88
    term    go to state 95
    factor  go to state 60
    call    go to state 61


state 78

   52 additive_expression: additive_expression MINUS . term

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var     go to state 88
    term    go to state 96
    factor  go to state 60
    call    go to state 61


state 79

   54 term: term TIMES . factor

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var     go to state 88
    factor  go to state 97
    call    go to state 61


state 80

   55 term: term OVER . factor

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var     go to state 88
    factor  go to state 98
    call    go to state 61


state 81

   34 selection_stmt: IF LPAREN expression . RPAREN statement
   35               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 99


state 82

   36 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 100


state 83

   43 var: ID $@4 LBRACK . expression RBRACK

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 101
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 84

   62 call: ID $@5 LPAREN . args RPAREN

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    $default  reduce using rule 64 (args)

    expression           go to state 102
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61
    args                 go to state 103
    arg_list             go to state 104


state 85

   57 factor: LPAREN expression RPAREN .

    $default  reduce using rule 57 (factor)


state 86

   38 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 38 (return_stmt)


state 87

   39 expression: var ASSIGN expression .

    $default  reduce using rule 39 (expression)


state 88

   58 factor: var .

    $default  reduce using rule 58 (factor)


state 89

   48 simple_expression: additive_expression EQ additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 48 (simple_expression)


state 90

   49 simple_expression: additive_expression NEQ additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 49 (simple_expression)


state 91

   45 simple_expression: additive_expression LT additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 45 (simple_expression)


state 92

   44 simple_expression: additive_expression LTE additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 44 (simple_expression)


state 93

   46 simple_expression: additive_expression GT additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 46 (simple_expression)


state 94

   47 simple_expression: additive_expression GTE additive_expression .
   51 additive_expression: additive_expression . PLUS term
   52                    | additive_expression . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 47 (simple_expression)


state 95

   51 additive_expression: additive_expression PLUS term .
   54 term: term . TIMES factor
   55     | term . OVER factor

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 51 (additive_expression)


state 96

   52 additive_expression: additive_expression MINUS term .
   54 term: term . TIMES factor
   55     | term . OVER factor

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 52 (additive_expression)


state 97

   54 term: term TIMES factor .

    $default  reduce using rule 54 (term)


state 98

   55 term: term OVER factor .

    $default  reduce using rule 55 (term)


state 99

   34 selection_stmt: IF LPAREN expression RPAREN . statement
   35               | IF LPAREN expression RPAREN . statement ELSE statement

    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45
    LBRACE  shift, and go to state 31
    SEMI    shift, and go to state 47
    RETURN  shift, and go to state 48

    compound_stmt        go to state 49
    statement            go to state 105
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 100

   36 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45
    LBRACE  shift, and go to state 31
    SEMI    shift, and go to state 47
    RETURN  shift, and go to state 48

    compound_stmt        go to state 49
    statement            go to state 106
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 101

   43 var: ID $@4 LBRACK expression . RBRACK

    RBRACK  shift, and go to state 107


state 102

   66 arg_list: expression .

    $default  reduce using rule 66 (arg_list)


state 103

   62 call: ID $@5 LPAREN args . RPAREN

    RPAREN  shift, and go to state 108


state 104

   63 args: arg_list .
   65 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 109

    $default  reduce using rule 63 (args)


state 105

   34 selection_stmt: IF LPAREN expression RPAREN statement .
   35               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 110

    ELSE      [reduce using rule 34 (selection_stmt)]
    $default  reduce using rule 34 (selection_stmt)


state 106

   36 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 36 (iteration_stmt)


state 107

   43 var: ID $@4 LBRACK expression RBRACK .

    $default  reduce using rule 43 (var)


state 108

   62 call: ID $@5 LPAREN args RPAREN .

    $default  reduce using rule 62 (call)


state 109

   65 arg_list: arg_list COMMA . expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 111
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 110

   35 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45
    LBRACE  shift, and go to state 31
    SEMI    shift, and go to state 47
    RETURN  shift, and go to state 48

    compound_stmt        go to state 49
    statement            go to state 112
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 111

   65 arg_list: arg_list COMMA expression .

    $default  reduce using rule 65 (arg_list)


state 112

   35 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 35 (selection_stmt)
